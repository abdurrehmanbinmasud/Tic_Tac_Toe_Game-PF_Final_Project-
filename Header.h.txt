#pragma once 
#include<cstring>
#include<iostream>
#include<istream>
#include<string>
#include<cmath>
#include<cstdlib>

using namespace std;
void StringCopy(string a, string& b)
{
    b = a;
}
int found(int X[], int x, int y)
{
    int s = 0, e = x, mid = 0;
    while (s <= e)
    {
        mid = (s + e) / 2;
        if (y < X[mid])
        {
            e = mid - 1;
        }
        else if (y > X[mid])
        {
            s = mid + 1;
        }
        else if (y == X[mid])
        {
            return mid;
        }


    }
    return -1;
}
int StringLength(char str[])
{
    int i = 0;
    while (str[i] != '\0')
    {
        i += 1;
    }
    return i;
}
void bubbleSort(int arr[], int n)
{
    for (int i = 1; i <= n - 1; i += 1)
    {
        for (int j = 0; j <= n - 2; j++)
        {
            if (arr[j] > arr[j + 1])
            {
                int c = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = c;
            }
        }
    }
}
void selectionSort(int arr[], int n)
{
    for (int i = 0; i < n; i += 1)
    {
        int idx = i;
        for (int j = i + 1; j < n; j += 1)
        {
            if (arr[j] < arr[idx])
            {
                idx = j;
            }
        }
        int c = arr[idx];
        arr[idx] = arr[i];
        arr[i] = c;
    }
}

int bsearch(int arr[], int size, int elem)
{
    int l = 0;
    int h = size - 1;
    while (l <= h)
    {
        int mid = (l + h) / 2;
        if (arr[mid] == elem)
            return mid;
        else if (elem > arr[mid])
            l = mid + 1;
        else
            h = mid - 1;
    }
    return -1;
}
string concatenation(string a, string b)
{
    return a + b;
}
void insertionSort(int arr[], int n)
{
    for (int i = 1; i < n; i++)
    {
        int key = arr[i];
        int j = i - 1;
        for (j = i - 1; j >= 0; j--)
        {
            if (arr[j] > key)
                arr[j + 1] = arr[j];
            else
                break;
        }
        arr[j + 1] = key;
    }
}
int search(int arr[], int n, int x)
{
    int i;
    for (i = 0; i < n; i++)
        if (arr[i] == x)
            return i;
    return -1;
}

double power(double x,double y)
{
    return pow(x, y);
}
int division(int x, int y)
{
   return x / y;
}

int multiplication(int x, int y)
{
    return x * y;

}
int subtraction(int x, int y)
{
    return x - y;
}
int sum(int x,int y)
{
    return x + y;
}
string StringReplace(string a, char x, char y)
{
    for (int i = 0; i < (a.length()); i += 1)
    {
        if (a[i] == x)
            a[i] = y;
    }
    return a;
}